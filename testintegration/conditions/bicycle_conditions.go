// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/testintegration/models"
	"time"
)

func (bicycleConditions bicycleConditions) Owner(conditions ...orm.Condition[models.Person]) orm.JoinCondition[models.Bicycle] {
	return orm.NewJoinCondition[models.Bicycle, models.Person](conditions, "Owner", "OwnerName", bicycleConditions.Preload(), "Name")
}
func (bicycleConditions bicycleConditions) PreloadOwner() orm.JoinCondition[models.Bicycle] {
	return bicycleConditions.Owner(Person.Preload())
}

type bicycleConditions struct {
	ID        orm.Field[models.Bicycle, model.UUID]
	CreatedAt orm.Field[models.Bicycle, time.Time]
	UpdatedAt orm.Field[models.Bicycle, time.Time]
	DeletedAt orm.Field[models.Bicycle, time.Time]
	Name      orm.StringField[models.Bicycle]
	OwnerName orm.StringField[models.Bicycle]
}

var Bicycle = bicycleConditions{
	CreatedAt: orm.Field[models.Bicycle, time.Time]{Name: "CreatedAt"},
	DeletedAt: orm.Field[models.Bicycle, time.Time]{Name: "DeletedAt"},
	ID:        orm.Field[models.Bicycle, model.UUID]{Name: "ID"},
	Name:      orm.StringField[models.Bicycle]{Field: orm.Field[models.Bicycle, string]{Name: "Name"}},
	OwnerName: orm.StringField[models.Bicycle]{Field: orm.Field[models.Bicycle, string]{Name: "OwnerName"}},
	UpdatedAt: orm.Field[models.Bicycle, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Bicycle when doing a query
func (bicycleConditions bicycleConditions) Preload() orm.Condition[models.Bicycle] {
	return orm.NewPreloadCondition[models.Bicycle](bicycleConditions.ID, bicycleConditions.CreatedAt, bicycleConditions.UpdatedAt, bicycleConditions.DeletedAt, bicycleConditions.Name, bicycleConditions.OwnerName)
}

// PreloadRelations allows preloading all the Bicycle's relation when doing a query
func (bicycleConditions bicycleConditions) PreloadRelations() []orm.Condition[models.Bicycle] {
	return []orm.Condition[models.Bicycle]{bicycleConditions.PreloadOwner()}
}
