// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/testintegration/models"
	"time"
)

func (childConditions childConditions) Parent1(conditions ...orm.Condition[models.Parent1]) orm.JoinCondition[models.Child] {
	return orm.NewJoinCondition[models.Child, models.Parent1](conditions, "Parent1", "Parent1ID", childConditions.Preload(), "ID")
}
func (childConditions childConditions) PreloadParent1() orm.JoinCondition[models.Child] {
	return childConditions.Parent1(Parent1.Preload())
}
func (childConditions childConditions) Parent2(conditions ...orm.Condition[models.Parent2]) orm.JoinCondition[models.Child] {
	return orm.NewJoinCondition[models.Child, models.Parent2](conditions, "Parent2", "Parent2ID", childConditions.Preload(), "ID")
}
func (childConditions childConditions) PreloadParent2() orm.JoinCondition[models.Child] {
	return childConditions.Parent2(Parent2.Preload())
}

type childConditions struct {
	ID        orm.Field[models.Child, model.UUID]
	CreatedAt orm.Field[models.Child, time.Time]
	UpdatedAt orm.Field[models.Child, time.Time]
	DeletedAt orm.Field[models.Child, time.Time]
	Name      orm.StringField[models.Child]
	Number    orm.Field[models.Child, int]
	Parent1ID orm.Field[models.Child, model.UUID]
	Parent2ID orm.Field[models.Child, model.UUID]
}

var Child = childConditions{
	CreatedAt: orm.Field[models.Child, time.Time]{Name: "CreatedAt"},
	DeletedAt: orm.Field[models.Child, time.Time]{Name: "DeletedAt"},
	ID:        orm.Field[models.Child, model.UUID]{Name: "ID"},
	Name:      orm.StringField[models.Child]{Field: orm.Field[models.Child, string]{Name: "Name"}},
	Number:    orm.Field[models.Child, int]{Name: "Number"},
	Parent1ID: orm.Field[models.Child, model.UUID]{Name: "Parent1ID"},
	Parent2ID: orm.Field[models.Child, model.UUID]{Name: "Parent2ID"},
	UpdatedAt: orm.Field[models.Child, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Child when doing a query
func (childConditions childConditions) Preload() orm.Condition[models.Child] {
	return orm.NewPreloadCondition[models.Child](childConditions.ID, childConditions.CreatedAt, childConditions.UpdatedAt, childConditions.DeletedAt, childConditions.Name, childConditions.Number, childConditions.Parent1ID, childConditions.Parent2ID)
}

// PreloadRelations allows preloading all the Child's relation when doing a query
func (childConditions childConditions) PreloadRelations() []orm.Condition[models.Child] {
	return []orm.Condition[models.Child]{childConditions.PreloadParent1(), childConditions.PreloadParent2()}
}
