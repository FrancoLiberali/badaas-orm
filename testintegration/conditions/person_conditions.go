// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/testintegration/models"
	"time"
)

type personConditions struct {
	ID        orm.Field[models.Person, model.UUID]
	CreatedAt orm.Field[models.Person, time.Time]
	UpdatedAt orm.Field[models.Person, time.Time]
	DeletedAt orm.Field[models.Person, time.Time]
	Name      orm.StringField[models.Person]
}

var Person = personConditions{
	CreatedAt: orm.Field[models.Person, time.Time]{Name: "CreatedAt"},
	DeletedAt: orm.Field[models.Person, time.Time]{Name: "DeletedAt"},
	ID:        orm.Field[models.Person, model.UUID]{Name: "ID"},
	Name:      orm.StringField[models.Person]{Field: orm.Field[models.Person, string]{Name: "Name"}},
	UpdatedAt: orm.Field[models.Person, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Person when doing a query
func (personConditions personConditions) Preload() orm.Condition[models.Person] {
	return orm.NewPreloadCondition[models.Person](personConditions.ID, personConditions.CreatedAt, personConditions.UpdatedAt, personConditions.DeletedAt, personConditions.Name)
}
