// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	gormembedded "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/gormembedded"
	cql "github.com/FrancoLiberali/cql/orm/cql"
	model "github.com/FrancoLiberali/cql/orm/model"
	"time"
)

type gormEmbeddedConditions struct {
	ID                      cql.Field[gormembedded.GormEmbedded, model.UIntID]
	CreatedAt               cql.Field[gormembedded.GormEmbedded, time.Time]
	UpdatedAt               cql.Field[gormembedded.GormEmbedded, time.Time]
	DeletedAt               cql.Field[gormembedded.GormEmbedded, time.Time]
	Int                     cql.Field[gormembedded.GormEmbedded, int]
	GormEmbeddedInt         cql.Field[gormembedded.GormEmbedded, int]
	GormEmbeddedNoPrefixInt cql.Field[gormembedded.GormEmbedded, int]
}

var GormEmbedded = gormEmbeddedConditions{
	CreatedAt: cql.Field[gormembedded.GormEmbedded, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[gormembedded.GormEmbedded, time.Time]{Name: "DeletedAt"},
	GormEmbeddedInt: cql.Field[gormembedded.GormEmbedded, int]{
		ColumnPrefix: "gorm_embedded_",
		Name:         "Int",
	},
	GormEmbeddedNoPrefixInt: cql.Field[gormembedded.GormEmbedded, int]{Name: "Int"},
	ID:                      cql.Field[gormembedded.GormEmbedded, model.UIntID]{Name: "ID"},
	Int:                     cql.Field[gormembedded.GormEmbedded, int]{Name: "Int"},
	UpdatedAt:               cql.Field[gormembedded.GormEmbedded, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the GormEmbedded when doing a query
func (gormEmbeddedConditions gormEmbeddedConditions) Preload() cql.Condition[gormembedded.GormEmbedded] {
	return cql.NewPreloadCondition[gormembedded.GormEmbedded](gormEmbeddedConditions.ID, gormEmbeddedConditions.CreatedAt, gormEmbeddedConditions.UpdatedAt, gormEmbeddedConditions.DeletedAt, gormEmbeddedConditions.Int, gormEmbeddedConditions.GormEmbeddedInt, gormEmbeddedConditions.GormEmbeddedNoPrefixInt)
}
