// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	belongsto "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/belongsto"
	cql "github.com/ditrit/badaas/orm/cql"
	model "github.com/ditrit/badaas/orm/model"
	"time"
)

func (ownedConditions ownedConditions) Owner(conditions ...cql.Condition[belongsto.Owner]) cql.JoinCondition[belongsto.Owned] {
	return cql.NewJoinCondition[belongsto.Owned, belongsto.Owner](conditions, "Owner", "OwnerID", ownedConditions.Preload(), "ID")
}
func (ownedConditions ownedConditions) PreloadOwner() cql.JoinCondition[belongsto.Owned] {
	return ownedConditions.Owner(Owner.Preload())
}

type ownedConditions struct {
	ID        cql.Field[belongsto.Owned, model.UUID]
	CreatedAt cql.Field[belongsto.Owned, time.Time]
	UpdatedAt cql.Field[belongsto.Owned, time.Time]
	DeletedAt cql.Field[belongsto.Owned, time.Time]
	OwnerID   cql.Field[belongsto.Owned, model.UUID]
}

var Owned = ownedConditions{
	CreatedAt: cql.Field[belongsto.Owned, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[belongsto.Owned, time.Time]{Name: "DeletedAt"},
	ID:        cql.Field[belongsto.Owned, model.UUID]{Name: "ID"},
	OwnerID:   cql.Field[belongsto.Owned, model.UUID]{Name: "OwnerID"},
	UpdatedAt: cql.Field[belongsto.Owned, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Owned when doing a query
func (ownedConditions ownedConditions) Preload() cql.Condition[belongsto.Owned] {
	return cql.NewPreloadCondition[belongsto.Owned](ownedConditions.ID, ownedConditions.CreatedAt, ownedConditions.UpdatedAt, ownedConditions.DeletedAt, ownedConditions.OwnerID)
}

// PreloadRelations allows preloading all the Owned's relation when doing a query
func (ownedConditions ownedConditions) PreloadRelations() []cql.Condition[belongsto.Owned] {
	return []cql.Condition[belongsto.Owned]{ownedConditions.PreloadOwner()}
}
