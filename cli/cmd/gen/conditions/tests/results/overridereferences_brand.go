// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	overridereferences "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/overridereferences"
	cql "github.com/ditrit/badaas/orm/cql"
	model "github.com/ditrit/badaas/orm/model"
	"time"
)

type brandConditions struct {
	ID        cql.Field[overridereferences.Brand, model.UUID]
	CreatedAt cql.Field[overridereferences.Brand, time.Time]
	UpdatedAt cql.Field[overridereferences.Brand, time.Time]
	DeletedAt cql.Field[overridereferences.Brand, time.Time]
	Name      cql.StringField[overridereferences.Brand]
}

var Brand = brandConditions{
	CreatedAt: cql.Field[overridereferences.Brand, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[overridereferences.Brand, time.Time]{Name: "DeletedAt"},
	ID:        cql.Field[overridereferences.Brand, model.UUID]{Name: "ID"},
	Name:      cql.StringField[overridereferences.Brand]{Field: cql.Field[overridereferences.Brand, string]{Name: "Name"}},
	UpdatedAt: cql.Field[overridereferences.Brand, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the Brand when doing a query
func (brandConditions brandConditions) Preload() cql.Condition[overridereferences.Brand] {
	return cql.NewPreloadCondition[overridereferences.Brand](brandConditions.ID, brandConditions.CreatedAt, brandConditions.UpdatedAt, brandConditions.DeletedAt, brandConditions.Name)
}
