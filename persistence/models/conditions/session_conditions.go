// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/persistence/models"
	"time"
)

type sessionConditions struct {
	ID        orm.Field[models.Session, model.UUID]
	CreatedAt orm.Field[models.Session, time.Time]
	UpdatedAt orm.Field[models.Session, time.Time]
	DeletedAt orm.Field[models.Session, time.Time]
	UserID    orm.Field[models.Session, model.UUID]
	ExpiresAt orm.Field[models.Session, time.Time]
}

var Session = sessionConditions{
	CreatedAt: orm.Field[models.Session, time.Time]{Name: "CreatedAt"},
	DeletedAt: orm.Field[models.Session, time.Time]{Name: "DeletedAt"},
	ExpiresAt: orm.Field[models.Session, time.Time]{Name: "ExpiresAt"},
	ID:        orm.Field[models.Session, model.UUID]{Name: "ID"},
	UpdatedAt: orm.Field[models.Session, time.Time]{Name: "UpdatedAt"},
	UserID:    orm.Field[models.Session, model.UUID]{Name: "UserID"},
}

// Preload allows preloading the Session when doing a query
func (sessionConditions sessionConditions) Preload() orm.Condition[models.Session] {
	return orm.NewPreloadCondition[models.Session](sessionConditions.ID, sessionConditions.CreatedAt, sessionConditions.UpdatedAt, sessionConditions.DeletedAt, sessionConditions.UserID, sessionConditions.ExpiresAt)
}
